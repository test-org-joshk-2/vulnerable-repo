name: Mock Deploymentsssssss

on:
  workflow_dispatch:

jobs:
  mock-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Deployment
      run: |
        echo "Creating a mock deployment..."
        deployment_id=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/deployments \
        -d '{"ref":"main","required_contexts":[],"environment":"production","description":"Mock deployment"}' | jq -r '.id')
        echo "Deployment ID: $deployment_id"
        echo "::set-output name=deployment_id::$deployment_id"

    - name: Simulate Deployment Status Update
      run: |
        echo "Updating deployment status..."
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.deployment_id }}/statuses \
        -d '{"state":"success","description":"Mock deployment completed successfully"}'
        
    - name: Update Deployment Status
      run: |
        deployment_id=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/deployments \
        -d '{"ref":"main","required_contexts":[],"environment":"production","description":"Mock deployment"}' | jq -r '.id')
        
        echo "Updating deployment status..."
        curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/deployments/$deployment_id/statuses \
        -d '{"state":"success","description":"Mock deployment completed successfully"}'
